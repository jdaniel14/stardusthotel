@model Stardust.Models.AmbienteBean

@{
    ViewBag.Title = "Modificar Ambiente";
}


<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src = "http://code.jquery.com/jquery-1.7.2.min.js"> </script>
<script type="text/javascript" src = "../../Scripts/ComboBoxProyector.js"> </script>

</head>

<h2>ModificarAmbiente</h2>

<p>
    Lista modificable de los ambientes del hotel
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine.js")" type="text/javascript"></script>

@using (Html.BeginForm("ModificarAmbiente", "Servicios", FormMethod.Post, new { @class = "form", id = "validate" }))
{
   
<form action = "" class = "form" >

   <fieldset>

        <legend>Ambiente</legend>
        @Html.HiddenFor(model => model.id)
    
        <div class="formRow">
            <label>Nombre</label>
            <div class="formRight">
                @Html.TextBoxFor(model => model.nombre, new { @class = "validate[required,custom[onlyLetterSp]]", name = "lettersValid", maxlength = "30", placeholder = "Maximo 30 caracteres aqui" })
            </div>
            <div class = "clear"></div>
        </div>
                
        <div class="formRow">
            <label>Descripcion</label>
            <div class="formRight">
                @Html.TextAreaFor(model => model.descripcion)
            </div>
            <div class = "clear"></div>
        </div>

        <div class="formRow"><span>Capacidad Maxima</span><span class="req">*</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.cap_maxima, new { @class = "validate[required,custom[onlyNumberSp]]", name = "numsValid", maxlength = "10", minlength = "1" }) 
                </div>
                <div class="clear"></div>
            </div>
           
           <div class="formRow"><span>Largo</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.largo, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1"}) 
                </div>
                <div class="clear"></div>
            </div>

            <div class="formRow"><span>Ancho</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.ancho, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1" }) 
                </div>
                <div class="clear"></div>
            </div>

            <div class="formRow"><span>Precio por hora</span><span class="req">*</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.precioXhora, new { @class = "validate[required,custom[onlyNumberSp]]", name = "numsValid", maxlength = "9" }) 
                </div>
                <div class="clear"></div>
            </div>

           <div class="formRow"><span>Largo del escenario</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.largo_escenario, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1"}) 
                </div>
                <div class="clear"></div>
            </div>

            <div class="formRow"><span>Ancho del escenario</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.ancho_escenario, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1"}) 
                </div>
                <div class="clear"></div>
            </div>

        <div class="formRow"><span>Proyector</span>
                <div class="formRight">
                
                Si
                @Html.RadioButtonFor(model => model.proyector,1)      
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;          
                No
                @Html.RadioButtonFor(model => model.proyector,0)

                </div>
                <div class="clear"></div>
            </div>      
    
        <p>
            <input type="submit" value="Guardar" class = "redB" />
        </p>

    </fieldset>

</form>
}