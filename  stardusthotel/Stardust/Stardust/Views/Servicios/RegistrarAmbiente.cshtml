@model Stardust.Models.AmbienteBean

@{
    ViewBag.Title = "Registrar Ambiente";
}

<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src = "http://code.jquery.com/jquery-1.7.2.min.js"> </script>
<script type="text/javascript" src = "../../Scripts/ComboBoxProyector.js"> </script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validationEngine.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/custom.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.mousewheel.js")" type="text/javascript"></script>

</head>

<h2>Registro de un nuevo Ambiente</h2>


<p>
    Llene el siguiente formulario para la creación de un nuevo ambiente
</p>


@ViewBag.lol
@using (Html.BeginForm("RegistrarAmbiente", "Servicios", FormMethod.Post, new { @class = "form", id = "validate" }))
{
 @Html.ValidationSummary(false)
    <fieldset>
        <div class="widget">
            <div class="title">
                <h6>Registrar Ambiente</h6>
            </div>

            <div class="formRow"><span>Nombre</span><span class="req">*</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.nombre, new { @class = "validate[required,custom[onlyLetterSp]]", name = "lettersValid", maxlength = "30", placeholder = "Maximo 30 caracteres aqui" }) 
                </div>
                <div class="clear"></div>
            </div>


            <div class="formRow"><span>Descripcion</span>
                <div class="formRight">
                @Html.TextAreaFor(m => m.descripcion, new { maxlength = "200", placeholder = "Maximo 200 caracteres aqui" }) 
                </div>
                <div class="clear"></div>
            </div>

           <div class="formRow"><span>Capacidad Maxima</span><span class="req">*</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.cap_maxima, new { @class = "validate[required,custom[onlyNumberSp]]", name = "numsValid", maxlength = "10" }) 
                </div>
                <div class="clear"></div>
            </div>
           
           <div class="formRow"><span>Largo</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.largo, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1" }) 
                </div>
                <div class="clear"></div>
            </div>

            <div class="formRow"><span>Ancho</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.ancho, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1" }) 
                </div>
                <div class="clear"></div>
            </div>

            <div class="formRow"><span>Precio por hora</span><span class="req">*</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.precioXhora, new { @class = "validate[required,custom[onlyNumberSp]]", name = "numsValid", maxlength = "9" }) 
                </div>
                <div class="clear"></div>
            </div>

           <div class="formRow"><span>Largo del escenario</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.largo_escenario, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1" }) 
                </div>
                <div class="clear"></div>
            </div>

            <div class="formRow"><span>Ancho del escenario</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.ancho_escenario, new { @class = "validate[custom[onlyNumberSp]]", name = "numsValid", maxlength = "9", minlength = "1" }) 
                </div>
                <div class="clear"></div>
            </div>

           @* <div class="formRow"><span>Proyector</span>
                <div class="formRight">
                @Html.TextBoxFor(m => m.proyector) 
                </div>
                <div class="clear"></div>
            </div>*@
                        
            @*<div class="formRow">
                <label for = "proyector" >Proyector</label>
                <div class="formRight">
                <select id="proyector" name="proyector">
                    <option value="1">Si</option>
                    <option value="0">No</option>
                </select>              
                </div> 
                <div class="clear"></div>
            </div>*@

            <div class="formRow"><span>Proyector</span>
                <div class="formRight">
                
                Si
                @Html.RadioButtonFor(model => model.proyector, 1)
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                &nbsp;
                No
                @Html.RadioButtonFor(model => model.proyector, 0)

                </div>
                <div class="clear"></div>
            </div>
            
                      
        </div>
    </fieldset>

    <p>
                <input type="submit" value="Crear" class = "redB" />
            </p>


}

